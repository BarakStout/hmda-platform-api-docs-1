# Data Browser API

The data browser api enables developers to interact with HMDA data. The API will return the data in 3 formats: JSON, CSV or PIPE. The CSV and PIPE end points will return a file download.

_Note:_ depending on the query, files might take a while to generate and may not open using conventional spread sheet applications.

## End Points

Use ```data-browser-api/view/``` for the end points bellow. Each end point could be called on nationwide data or on specific states/msamds. If ```nationwide``` is not specified, state(s) or msamds **must** be selected. A call made with the nationwide end point will discard any state(s) or msamds if present. For state, use 2 character state name. For msamd use a 5 digit integer.

- __Aggregations__

  The ```aggregation``` end point can be used to generated JSON reports.

- __CSV__

  The ```csv``` end point can be used to generate CSV reports. The file will be streamed.

- __Pipe__

  The ```pipe``` end point can be used to generate pipe reports. The file will be streamed.

## Filters

Data request could be filtered based on the following parameters. Multiple options are acceptable.


 Variable Name | Options
--- | ---
actions_taken | 1,2,3,4,5,6,7,8
construction_methods | 1,2
dwelling_categories | Single Family (1-4 Units):Site-Built<br>Multifamily:Site-Built<br>Single Family (1-4 Units):Manufactured<br>Multifamily:Manufactured
ethnicities | Hispanic or Latino<br>Not Hispanic or Latino<br>Joint<br>Ethnicity Not Available<br>Free Form Text Only
lien_statuses | 1,2
loan_products | Conventional:First Lien<br>FHA:First Lien<br>VA:First Lien<br>FSA/RHS:First Lien<br>Conventional:Subordinate Lien<br>FHA:Subordinate Lien<br>VA:Subordinate Lien<br>FSA/RHS:Subordinate Lien
loan_purposes  | 1,2,31,32,4,5
loan_types | 1,2,3,4
races | American Indian or Alaska Native<br>Asian<br>Black or African American<br>Native Hawaiian or Other Pacific Islander<br>White<br>2 or more minority races<br>Joint<br>Free Form Text Only<br>Race Not Available<br>
sexes | Male<br>Female<br>Joint
total_units | 1,2,3,4,5-24,25-49,50-99,100-149,>149


## Health Check

```GET``` Check whether the data browser api back end is up and in good health:

```shell

```


## Aggregation Example

  ```shell
  curl "<%= config[:apihost] %>/data-browser-api/view/aggregations?states=MD&years=2018&actions_taken=5,6&races=White,Asian,Joint"
  ```

  ```GET``` JSON with the following parameters

  var | value
  --- | ---
  years | 2018
  states | MD
  actions_taken | 5,6
  races | White, Asian, Joint

  ```json
  {
    "parameters": {
        "year": "2018",
        "state": "MD",
        "actions_taken": "5,6",
        "races": "White,Asian,Joint"
    },
    "aggregations": [
        {
            "count": 243,
            "sum": 9.4325E7,
            "actions_taken": "6",
            "races": "Joint",
            "state": "MD",
            "year": "2018"
        },
        {
            "count": 716,
            "sum": 2.5435E8,
            "actions_taken": "6",
            "races": "Asian",
            "state": "MD",
            "year": "2018"
        },
        {
            "count": 7505,
            "sum": 2.323145E9,
            "actions_taken": "6",
            "races": "White",
            "state": "MD",
            "year": "2018"
        },
        {
            "count": 165,
            "sum": 4.7595E7,
            "actions_taken": "5",
            "races": "Joint",
            "state": "MD",
            "year": "2018"
        },
        {
            "count": 679,
            "sum": 1.90835E8,
            "actions_taken": "5",
            "races": "Asian",
            "state": "MD",
            "year": "2018"
        },
        {
            "count": 5237,
            "sum": 1.241115E9,
            "actions_taken": "5",
            "races": "White",
            "state": "MD",
            "year": "2018"
        }
    ]
}
  ```


## CSV Example

  ```shell
  curl "<%= config[:apihost] %>/data-browser-api/view/csv?states=CA,MD,DC&years=2018&actions_taken=5"
  ```

  ```GET``` CSV file with the following parameters

  var | value
  --- | ---
  states | CA, MD, DC
  years | 2018
  action_taken | 5

## PIPE Example

  ```shell
  curl "<%= config[:apihost] %>/data-browser-api/view/pipe?msamds=35614,47894&years=2018&loan_products=Conventional%3AFirst%20Lien"
  ```

  ```GET``` PIPE file with the following parameters

  var | value
  --- | ---
  msamds | 23434,34243
  years | 2018
  loan_products | Conventional:First Lien


<!--
  - ```data-browser-api/view/nationwide/csv```
  - ```data-browser-api/view/pipe```
  - ```data-browser-api/view/nationwide/pipe``` -->

## Errors

```shell
curl "<%= config[:apihost] %>/data-browser-api/view/csv"
```

Incorrect calls will result in an error. For example the following call will result in an error since there is no state(s)/msamds and years provided.

<br>

```json
{
    "errorType": "provide-atleast-msamds-or-states",
    "message": "Provide year and either states or msamds or both"
}
```
